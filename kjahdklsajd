Help on class set in module builtins:

class sseett(object)
 |  set() -> new empty set object
 |  set(iterable) -> new set object
 |  
 |  Build an unordered collection of unique elements.
 |  
 |  Methods defined here:
 |  
 |  ____aanndd____(self, value, /)
 |      Return self&value.
 |  
 |  ____ccoonnttaaiinnss____(...)
 |      x.__contains__(y) <==> y in x.
 |  
 |  ____eeqq____(self, value, /)
 |      Return self==value.
 |  
 |  ____ggee____(self, value, /)
 |      Return self>=value.
 |  
 |  ____ggeettaattttrriibbuuttee____(self, name, /)
 |      Return getattr(self, name).
 |  
 |  ____ggtt____(self, value, /)
 |      Return self>value.
 |  
 |  ____iiaanndd____(self, value, /)
 |      Return self&=value.
 |  
 |  ____iinniitt____(self, /, *args, **kwargs)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ____iioorr____(self, value, /)
 |      Return self|=value.
 |  
 |  ____iissuubb____(self, value, /)
 |      Return self-=value.
 |  
 |  ____iitteerr____(self, /)
 |      Implement iter(self).
 |  
 |  ____iixxoorr____(self, value, /)
 |      Return self^=value.
 |  
 |  ____llee____(self, value, /)
 |      Return self<=value.
 |  
 |  ____lleenn____(self, /)
 |      Return len(self).
 |  
 |  ____lltt____(self, value, /)
 |      Return self<value.
 |  
 |  ____nnee____(self, value, /)
 |      Return self!=value.
 |  
 |  ____oorr____(self, value, /)
 |      Return self|value.
 |  
 |  ____rraanndd____(self, value, /)
 |      Return value&self.
 |  
 |  ____rreedduuccee____(...)
 |      Return state information for pickling.
 |  
 |  ____rreepprr____(self, /)
 |      Return repr(self).
 |  
 |  ____rroorr____(self, value, /)
 |      Return value|self.
 |  
 |  ____rrssuubb____(self, value, /)
 |      Return value-self.
 |  
 |  ____rrxxoorr____(self, value, /)
 |      Return value^self.
 |  
 |  ____ssiizzeeooff____(...)
 |      S.__sizeof__() -> size of S in memory, in bytes
 |  
 |  ____ssuubb____(self, value, /)
 |      Return self-value.
 |  
 |  ____xxoorr____(self, value, /)
 |      Return self^value.
 |  
 |  aadddd(...)
 |      Add an element to a set.
 |      
 |      This has no effect if the element is already present.
 |  
 |  cclleeaarr(...)
 |      Remove all elements from this set.
 |  
 |  ccooppyy(...)
 |      Return a shallow copy of a set.
 |  
 |  ddiiffffeerreennccee(...)
 |      Return the difference of two or more sets as a new set.
 |      
 |      (i.e. all elements that are in this set but not the others.)
 |  
 |  ddiiffffeerreennccee__uuppddaattee(...)
 |      Remove all elements of another set from this set.
 |  
 |  ddiissccaarrdd(...)
 |      Remove an element from a set if it is a member.
 |      
 |      If the element is not a member, do nothing.
 |  
 |  iinntteerrsseeccttiioonn(...)
 |      Return the intersection of two sets as a new set.
 |      
 |      (i.e. all elements that are in both sets.)
 |  
 |  iinntteerrsseeccttiioonn__uuppddaattee(...)
 |      Update a set with the intersection of itself and another.
 |  
 |  iissddiissjjooiinntt(...)
 |      Return True if two sets have a null intersection.
 |  
 |  iissssuubbsseett(...)
 |      Report whether another set contains this set.
 |  
 |  iissssuuppeerrsseett(...)
 |      Report whether this set contains another set.
 |  
 |  ppoopp(...)
 |      Remove and return an arbitrary set element.
 |      Raises KeyError if the set is empty.
 |  
 |  rreemmoovvee(...)
 |      Remove an element from a set; it must be a member.
 |      
 |      If the element is not a member, raise a KeyError.
 |  
 |  ssyymmmmeettrriicc__ddiiffffeerreennccee(...)
 |      Return the symmetric difference of two sets as a new set.
 |      
 |      (i.e. all elements that are in exactly one of the sets.)
 |  
 |  ssyymmmmeettrriicc__ddiiffffeerreennccee__uuppddaattee(...)
 |      Update a set with the symmetric difference of itself and another.
 |  
 |  uunniioonn(...)
 |      Return the union of sets as a new set.
 |      
 |      (i.e. all elements that are in either set.)
 |  
 |  uuppddaattee(...)
 |      Update a set with the union of itself and others.
 |  
 |  ----------------------------------------------------------------------
 |  Static methods defined here:
 |  
 |  ____nneeww____(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  ____hhaasshh____ = None
